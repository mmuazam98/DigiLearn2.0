<%- include("partials/header") %> 

<section id="students">

    <div class="container table-responsive">
        <div class="text-center my-5">
          
            <!-- <div class="demo">
                <div class="dropdown-container">
                  <select id="class" name="class">
                    <option value="english">English</option>
                    <option value="hindi">Hindi</option>
                    <option value="maths">Maths</option>
                    <option value="science">Science</option>
                    <option value="science">SST</option>
                    <option value="science">GK</option>
                  </select>
                  <div class="select-icon">
                    <svg focusable="false" viewBox="0 0 104 128" width="25" height="35" class="icon">
                      <path d="m2e1 95a9 9 0 0 1 -9 9 9 9 0 0 1 -9 -9 9 9 0 0 1 9 -9 9 9 0 0 1 9 9zm0-3e1a9 9 0 0 1 -9 9 9 9 0 0 1 -9 -9 9 9 0 0 1 9 -9 9 9 0 0 1 9 9zm0-3e1a9 9 0 0 1 -9 9 9 9 0 0 1 -9 -9 9 9 0 0 1 9 -9 9 9 0 0 1 9 9zm14 55h68v1e1h-68zm0-3e1h68v1e1h-68zm0-3e1h68v1e1h-68z"></path>
                    </svg>
                  </div>
                </div>
              </div> -->
            
        </div>
        <form action="/mark" method="post" id="form">
            <table class="table table-borderless">
                <thead class="thead">
                  <tr>
                    <th scope="col">#</th>
                    <th scope="col">Name</th>
                    <th scope="col">Username</th>
                    <th scope="col">Class</th>
                    <th scope="col">Regst. No.</th>
                    <th scope="col">Contact</th>
                    <th scope="col">Att.</th>
                  </tr>
                </thead>
                <tbody>
                <% students.forEach((st,index) => { %>
                    <tr>
                        <th scope="row"><%= index+1 %></th>
                        <td><%= st.name %></td>
                        <td><%= st.username %></td>
                        <td><%= st.class %>th</td>
                        <td><%= st.regst %></td>
                        <td>+<%= st.contact %></td>
                        <td style="display: none;"><%= st.userID %> </td>
                        <td>
                            <div class="form-group">
                                <div class="checkbox">
                                    <label for="check<%= index+1 %>">
                                        <input type="checkbox" id="check<%= index+1 %>"/>
                                        <span class="fake-input"></span>
                                        <span class="fake-label"></span>
                                    </label>
                                </div>
                            </div
                        </td>
                    </tr>
                <% }) %>
                </tbody>
              </table>
              <div class="text-center my-4">
                <button class="btn btn-primary" id="submit">Submit</button>
            </div>
        </form>
        
          
    </div>
</section>
<script>
    var x, i, j, l, ll, selElmnt, a, b, c;
/*look for any elements with the class "custom-select":*/
x = document.getElementsByClassName("custom-select");
l = x.length;
for (i = 0; i < l; i++) {
  selElmnt = x[i].getElementsByTagName("select")[0];
  ll = selElmnt.length;
  /*for each element, create a new DIV that will act as the selected item:*/
  a = document.createElement("DIV");
  a.setAttribute("class", "select-selected");
  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  x[i].appendChild(a);
  /*for each element, create a new DIV that will contain the option list:*/
  b = document.createElement("DIV");
  b.setAttribute("class", "select-items select-hide");
  for (j = 1; j < ll; j++) {
    /*for each option in the original select element,
    create a new DIV that will act as an option item:*/
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {
        /*when an item is clicked, update the original select box,
        and the selected item:*/
        var y, i, k, s, h, sl, yl;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        sl = s.length;
        h = this.parentNode.previousSibling;
        for (i = 0; i < sl; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            y = this.parentNode.getElementsByClassName("same-as-selected");
            yl = y.length;
            for (k = 0; k < yl; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "same-as-selected");
            break;
          }
        }
        h.click();
    });
    b.appendChild(c);
  }
  x[i].appendChild(b);
  a.addEventListener("click", function(e) {
      /*when the select box is clicked, close any other select boxes,
      and open/close the current select box:*/
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
    });
}
function closeAllSelect(elmnt) {
  /*a function that will close all select boxes in the document,
  except the current select box:*/
  var x, y, i, xl, yl, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  xl = x.length;
  yl = y.length;
  for (i = 0; i < yl; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < xl; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}
/*if the user clicks anywhere outside the select box,
then close all select boxes:*/
document.addEventListener("click", closeAllSelect);
</script>
<%- include("partials/footer") %> 